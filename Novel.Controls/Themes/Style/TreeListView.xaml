<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:local="clr-namespace:Novel.Controls.TreeListView"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <PathGeometry x:Key="TreeArrow">
        <PathGeometry.Figures>
            <PathFigureCollection>
                <PathFigure
                    IsClosed="True"
                    IsFilled="True"
                    StartPoint="0 0">
                    <PathFigure.Segments>
                        <PathSegmentCollection>
                            <LineSegment Point="0 6" />
                            <LineSegment Point="6 0" />
                        </PathSegmentCollection>
                    </PathFigure.Segments>
                </PathFigure>
            </PathFigureCollection>
        </PathGeometry.Figures>
    </PathGeometry>

    <Style TargetType="{x:Type ToggleButton}" x:Key="ExpandCollapseToggleStyle">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        Background="Transparent"
                        Height="16"
                        Padding="5,5,5,5"
                        Width="16">
                        <Path
                            Data="{StaticResource TreeArrow}"
                            Fill="Transparent"
                            Stroke="#FF989898"
                            x:Name="ExpandPath">
                            <Path.RenderTransform>
                                <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1BBBFA" />
                            <Setter Property="Fill" TargetName="ExpandPath" Value="Transparent" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Duration="0:0:0.25"
                                            From="135"
                                            Storyboard.TargetName="ExpandPath"
                                            Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(RotateTransform.Angle)"
                                            To="180" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Duration="0:0:0.25"
                                            From="180"
                                            Storyboard.TargetName="ExpandPath"
                                            Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(RotateTransform.Angle)"
                                            To="135" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959" />
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0" x:Key="MouseOverBackground">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FCFDFE" Offset="0" />
            <GradientStop Color="#F2F7FE" Offset="1" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>


    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0" x:Key="SelectedBackground">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#DCEBFC" Offset="0" />
            <GradientStop Color="#C1DBFC" Offset="1" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>


    <Style TargetType="{x:Type local:TreeListViewItem}" x:Key="{x:Static local:TreeListView.DefaultItemContainerStyleKey}" />
    <Style BasedOn="{StaticResource {x:Type ListBox}}" TargetType="local:TreeListView">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TreeListView}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ItemsPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Type ListBoxItem}}" TargetType="{x:Type local:TreeListViewItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TreeListViewItem}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Height="25" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource MouseOverBackground}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource SelectedBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:TreeListViewNode">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:TreeListViewNode">
                    <Border>
                        <Border Padding="{Binding LevelPadding}">
                            <StackPanel
                                HorizontalAlignment="Left"
                                Orientation="Horizontal"
                                VerticalAlignment="Center">
                                <ToggleButton
                                    IsChecked="{Binding IsExpanded}"
                                    Name="expander"
                                    Style="{StaticResource ExpandCollapseToggleStyle}" />
                                <TextBlock Text="{Binding Text}" />
                            </StackPanel>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding HasItem}" Value="False">
                            <Setter Property="Visibility" TargetName="expander" Value="Hidden" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListViewItem}" x:Key="{x:Static local:TreeListGridView.ItemContainerStyle}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Name="Bd"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="true">
                        <GridViewRowPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource SelectedBackground}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="Selector.IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource SelectedBackground}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>